name: Bump Version

on:
  # pull_request:
  #   types: [labeled]
  push:
    branches:
      - bug-291
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write  # Required to commit changes to PR branches

jobs:
  bump-version:
    runs-on: ubuntu-latest
    # if: ${{ github.event.label.name == 'release' }}
    steps:
      - name: Generate a token
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.NB_BOT_ID }}
          private-key: ${{ secrets.NB_BOT_KEY }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ steps.generate-token.outputs.token }}
      
      - name: Set up node env
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Compute version using auto
        id: auto-version
        run: |
          VERSION=$(npx auto version)
          echo "Computed version: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      
      # - name: Compute next version
      #   id: compute-tag
      #   uses: craig-day/compute-tag@v18
      #   with:
      #     github_token: ${{ steps.generate-token.outputs.token }}
      #     prerelease_suffix: ''
      #     prerelease: false


      # - name: Update package.json
      #   run: |
      #     new_version=$(~/auto version --quiet)
      #     echo "New version: $new_version"
      #     jq ".version = \"$new_version\"" package.json > package.json.tmp && mv package.json.tmp package.json
      #   env:
      #     GH_TOKEN: ${{ steps.generate-token.outputs.token }}

      # - name: Commit and Push Changes
      #   run: |
      #     git config --global user.name "Neurobagel Bot"
      #     git config --global user.email "neurobagel-bot[bot]@users.noreply.github.com"
      #     git add package.json
      #     git commit -m "Bumped version to $new_version"
      #     git push origin HEAD
      #   env:
      #     GH_TOKEN: ${{ steps.generate-token.outputs.token }}

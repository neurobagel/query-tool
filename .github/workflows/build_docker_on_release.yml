# After a release is triggered, this workflow launches a process to build a semver Docker image 
# and at the end also updates and commits the version in package.json
name: build Docker image on release

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - 
        name: Generate a token
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.NB_BOT_ID }}
          private-key: ${{ secrets.NB_BOT_KEY }}

      -
        name: Checkout
        uses: actions/checkout@v4
        # Some repos have submodules that need to be part of the Docker image
        with:
          submodules: recursive
          token: ${{ steps.generate-token.outputs.token }}

      - 
        name: Update package.json version
        run: |
          release_version=${{ github.event.release.tag_name }}
          jq ".version = \"${release_version}\"" package.json > tmp.$$.json && mv tmp.$$.json package.json
      - 
        # The release event is a superset of the push tag event, 
        # so we expect two tags to be generated by docker/metadata-action 
        # based on the behaviour for the type=semver,pattern=... tag type:
        # 1. a semver tag vX.Y.Z (from the release Git tag; this is what will be used as the image version in the generated label)
        # 2. latest (as type=semver,pattern=... is part of the latest tag handling)
        # References:
        # - https://github.com/docker/metadata-action?tab=readme-ov-file#typesemver
        # - https://github.com/docker/metadata-action?tab=readme-ov-file#latest-tag
        # - https://github.com/docker/metadata-action/issues/103
        # - https://github.com/docker/metadata-action/issues/168
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # TODO: Repos with this wf must have DOCKERHUB_REPO set in the repository variables
          images: ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.DOCKERHUB_REPO }}
          # NOTE: This input is probably not necessary as the action should generate the appropriate tags
          # based on the default type=ref,event=tag, but we define an explicit pattern here for clarity
          tags: |
            type=semver,pattern={{raw}}
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build and push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/arm64, linux/amd64
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          # Select a subset of labels to apply from https://github.com/opencontainers/image-spec/blob/main/annotations.md#pre-defined-annotation-keys,
          # following https://github.com/docker/metadata-action/issues/303
          labels: |
            org.opencontainers.image.created=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.source'] }}
            org.opencontainers.image.revision=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}
            org.opencontainers.image.version=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}

      - 
        name: Commit and Push Changes
        run: |
          git config --global user.name "Neurobagel Bot"
          git config --global user.email "neurobagel-bot[bot]@users.noreply.github.com"
          git pull
          git diff --quiet package.json || (git add package.json && git commit -m "[MNT] post-release version bump to $NEW_VERSION" && git push origin main)